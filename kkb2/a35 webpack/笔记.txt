 工具：
1.编译类——babel、grunt/gulp
  ES6->ES5
2.打包——browserify
  一堆文件 -> 单个文件
3.开发辅助——browser-sync
  多端同步
4.测试类——
  单元测试：模块、函数
  集成测试：
  压力测试：性能、负载能力、隐藏bug

--------------------------------------------------------------------------------

webpack+插件
打包、编译、测试、调试

--------------------------------------------------------------------------------

1.webpack安装
  cnpm i -g webpack
2.编写配置

  改了：webpack --config xxxx

--------------------------------------------------------------------------------

ES6——import/export

--------------------------------------------------------------------------------

ES6模块化
  export default xxx;         //作为模块本身被输出     import xxx from '...';
  export let a=12,b=5;        //输出模块的东西         import {a,b} from '...';

webpack基本配置
  module.exports={
    entry: '文件名',
    output: {
      path: '结果目录',
      filename: '结果文件名'
    }
  };

--------------------------------------------------------------------------------

多入口
entry: {
  名字: '入口文件地址',
  ...
},
output: {
  path: xxx,
  filename: '...[name]...'
}

--------------------------------------------------------------------------------

dev-server：
1.安装
  cnpm i webpack webpack-cli webpack-dev-server -D

--------------------------------------------------------------------------------

#webpack-cli      命令行工具
npm i -g webpack

#webpack          库
npm i webpack

--------------------------------------------------------------------------------

1.webpack本身
  打包

2.DevServer
  开发服务器

3.Loader——翻译
  babel-loader

--------------------------------------------------------------------------------

babel-loader
1.babel-loader      给webpack用的
2.babel-core        babel核心库
3.babel-preset-env  环境预设

--------------------------------------------------------------------------------

90%的loader
module: {
  rules: [
    {test: 正则, use: loader}
  ]
}

--------------------------------------------------------------------------------

1.打包->配置
2.DevServer
3.各种loader

常见loader、TypeScript
三大框架
