1.三大框架——App
2.React、flux、redux、native、...
3.强依赖JSX
4.React尤其不适合做Web

--------------------------------------------------------------------------------

问个关于 node 的问题，一个模块抛出get set两个方法，a.js 调用set b.js调用get，怎么才能实现这个模块啊？

--------------------------------------------------------------------------------

JSX==babel==browser.js

--------------------------------------------------------------------------------

browser.js       编译JSX
react.js         React核心库
react-dom.js     React操作DOM库

--------------------------------------------------------------------------------

<div title="aaa">
  <div>bbb</div>
</div>

//JS:
let oDiv=document.createElement('div');
oDiv.title='aaa';
let oDivChild=document.createElement('div');
oDiv.appendChild(oDivChild);
oDivChild.innerHTML='bbb';

//JSX:
let oDiv=<div title="aaa">
  <div>bbb</div>
</div>;

--------------------------------------------------------------------------------

1.JSX可以直接创建组件——直接写组件的HTML
  *创建出来的是组件——不是HTML标签
2.有且仅有一个父级
3.class->className
  for->htmlFor

--------------------------------------------------------------------------------

1.所有组件必须继承自React.Component
2.必须：
  i.有constructor、并且super
  ii.首字母必须大写
  iii.有render方法


<div>{{a}}</div>

new Vue({
  data: {
    a: 12
  },
})

--------------------------------------------------------------------------------

<div a="xxx">       字符串
<div a={xxx}>       变量

--------------------------------------------------------------------------------

1.for、if怎么写
  用JS自带的语法
2.{}
  向HTML输出——{{}}
  向属性输出——v-bind
3.组件传参
  name="xxx"          字符串
  name={xxx}          变量

--------------------------------------------------------------------------------

组件传参：
传
  <xxx name={xxx}></xxx>

接
  this.props  =>  所有属性

--------------------------------------------------------------------------------

oDiv.onclick=show();    ×
oDiv.onclick=show;      √

--------------------------------------------------------------------------------

this.普通属性       没用
this.props         只读
this.state         可以改、只要变化就会重新渲染组件(类似于vue的data)

--------------------------------------------------------------------------------

React可变的一般都是state
1.初始化——constructor
  this.state={...};

2.修改
  this.setState({
    xxx: ...
  })

3.使用
  this.state.xxx

--------------------------------------------------------------------------------

传参
  name="str"
  name={xxx}

  this.props.xxx    只读

事件
  onClick={this.fn.bind(this)}

状态
  this.setState({

  })

--------------------------------------------------------------------------------

组件间通信——Flux、Redux
1.父级->子级
  属性

2.子级->父级
  方法

--------------------------------------------------------------------------------

Redux

--------------------------------------------------------------------------------

cli
route
数据交互——fetch
打包

--------------------------------------------------------------------------------

server.js
let db=mysql.createConnection({});

server.get(async ctx=>{
  db.tansaction
});

--------------------------------------------------------------------------------
